plugins {
    id 'java'
    id 'application'
}

group 'com.terrescalmes'
version '1.0'

sourceCompatibility = 17

repositories {
    mavenCentral()
}

ext {
    lwjglVersion = "3.3.3"
    imguiJavaVersion = "1.89.0" // Dernière version stable

    // Auto-détection de l'OS
    lwjglNatives = "natives-${System.getProperty('os.name').toLowerCase().contains('mac') ? 'macos' : 
                    System.getProperty('os.name').toLowerCase().contains('win') ? 'windows' : 'linux'}"

    // Auto-détection de l'OS pour ImGui-Java
    def osName = System.getProperty('os.name').toLowerCase()
    def osArch = System.getProperty('os.arch').toLowerCase()
    
    if (osName.contains('win')) {
        imguiNatives = osArch.contains('64') ? 'natives-windows' : 'natives-windows'
    } else if (osName.contains('mac')) {
        imguiNatives = osArch.contains('aarch64') || osArch.contains('arm') ? 'natives-macos-arm64' : 'natives-macos-x86'
    } else {
        imguiNatives = osArch.contains('64') ? 'natives-linux-x86_64' : 'natives-linux-x86'
    }
}

dependencies {
    // LWJGL Core
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-stb"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"

    // JOML
    implementation 'org.joml:joml:1.10.5'

    // ImGui-Java 
    implementation "io.github.spair:imgui-java-binding:$imguiJavaVersion"
    implementation "io.github.spair:imgui-java-lwjgl3:$imguiJavaVersion"
    runtimeOnly "io.github.spair:imgui-java-$imguiNatives:$imguiJavaVersion"
}

application {
    mainClass = 'com.terrescalmes.Main'
}

// Copier les resources dans le build (important pour les shaders!)
sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}
